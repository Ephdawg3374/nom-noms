c
image
json
image
json.image_pic.url(:medium)
json
c
json.image_pic
json
jons
image
imgs
image
imgs[0].image_pic.url
imgs[0].image_pic
imgs[0]
imgs.class
imgs
c
review.images.to_a.each do |img| p img.image_pic.url end
review.images.to_a
review.images.class.to_a
review.images.class.to-a
review.images.class
review.images.type
review.images
review
image
c
@image.review
@review
c
@image.image_pic.url
@image.image.url
@image.image_url
@image.url
@image.img_url
@image
c
@review
c
params[:images].split(",")
params[:images]
params[:images[
c
images
image
images
c
params[:image][:files]
params[:image]
image_params
params
image_params
c
image_params
@review
c
@review
c
@locations
c
params
@locations
c
price_range
area
location_type
c
@user
c
session[:session_token]
current_user
c
user_params
c
params
c
user_params
c
params
c
user_params
params
before_image_post_processparams
c
current_user
@user
c
@user
User.find_by_username("ephraim2")
User.find_by_username("ephraim2"0
User.all[1].session_token
User.all[1]session_token
User.all.first.session_token
User.all
User.where(session_token: "n2yjSxTczAw1XJtSbUWImA")
@user.session_token == "n2yjSxTczAw1XJtSbUWImA"
@user.session_token
@user
User.find(1)
User.find_by_session_token("n2yjSxTczAw1XJtSbUWImA")
current_user
session[:session_token] == @user.session_token
session[:session_token]
@user.session_token
@user
user
current_user
session[:session_token]
n
user.session_token
n
user.session_token
user
c
user
@current_user
session[:session_token]
current_user
c
User.where(session_token: "tTgkE1B8PoMv4WTbIj3jMQ")
User.find(session_token: "tTgkE1B8PoMv4WTbIj3jMQ")
User.all
User.find_by_session_token("tTgkE1B8PoMv4WTbIj3jMQ")
current_user
c
session_params[:username]
session_params
params
c
params[:user]
params
session_params
c
@locations.count
@locations
c
search_params[:searchType].empty?
search_params[:searchType].empty
search_params[:searchType]
location_type
testing
c
testing.length
testing
n
sql_query_params
search_location_coords
c
if search_location_in_db p yay end
search_location_real
search_location_in_db
search_location
c
area
search_location_coords
c
testing.length
testing
c
testing
c
n
distance_query_params
;lsakfjk;asdf
 !  
 !  Your account henry.d.dotson@gmail.com does not have access to backpacking.
Warning: Permanently added the RSA host key for IP address '50.19.85.154' to the list of known hosts.
c
search_location_coords
search_location
c
 !  
 !  Your account henry.d.dotson@gmail.com does not have access to backpacking.
Warning: Permanently added the RSA host key for IP address '50.19.85.154' to the list of known hosts.
c
@location_types
c
types + cuisines
tupes + cuisines
cuisines
types
c
types
types + cuisines
types
cuisines
c
search_params[:distanceRange]
search_params[:distance]
locations_by_params
c
price_range
location_address
search_params
c
@locations
c
@location_areas
@locations
@location_types
c
@location_types
c
@location_types
c
@location_types
c
n
nn
n
s
c
n
Location.calc_distance([lat, lng]n
c
params[:fasdfasd]
params[:locTypeAutoCompleteRequest]
params
c
2 == true
1 == true
params[:locTypeAutoCompleteRequest] == true
params[:locTypeAutoCompleteRequest]
params[:locTypeAutoCompleteRequest] == nil
params[:locTypeAutoCompleteRequest] == false
params[:locTypeAutoCompleteRequest] == true
if params[:locTypeAutoCompleteRequest]
if params[:locTypeAutoCompleteRequest] p "yay" end
params
c
search_location
c
Location.calc_distance([lat, lng], search_location_coords)
search_location_coords
lng = locations[0].lng
lat = locations[0].lat
locations[0].lat
locations.each {|location| p location.lat}
location
n
c
locations_within_distance
n
sn
s
distance
n
locations
c
search_location
c
search_location
c
search_location_real
